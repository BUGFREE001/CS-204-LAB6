

#1


#include <stdio.h>

int *biggest_of_two(int *a,int *b)
{
if(*a>*b)
{
return a;
}
else
{
return b;
}
}

int *biggest_of_three(int *a,int *b,int *c)
{
if(*a>=*b && *a>=*c)
{
return a;
}
else if(*b>=*c && *b>=*a)
{
return b;
}
else
{
return c;
}
}

int main() {
int a,b,c;
printf("Enter two numbers to get biggest of two numbers(give space between two numbers) \n");
scanf("%d %d",&a,&b);
printf("Biggest of two numbers is :%d \n",*biggest_of_two(&a,&b));

printf("Enter three numbers to get biggest of three numbers(give space between three numbers) \n");
scanf("%d %d %d",&a,&b,&c);
printf("Biggest of three numbers is :%d \n",*biggest_of_three(&a,&b,&c));
return 0;
}



------------------------------------------------------------------------------------------------------------------------------



#2

#include <stdio.h>


void div_rem(int a , int b , int *quotient , int *remains){
// calculate quotient
int q = a/b;
//calculate remainder
int r = a%b;
//storing results in pointers
quotient = q;
remains = r;
printf("Quotient : %d",quotient);
printf("\nRemainder : %d",remains);
}

int main(void) {
int num1, num2, *quotient,*remains;
printf("Enter dividend: ");
scanf("%d", &num1);
printf("Enter divisor: ");
scanf("%d", &num2);

// Calling our function
div_rem(num1 , num2 ,quotient ,remains);

}



------------------------------------------------------------------------------------------------------------------------------



#3

#include <stdio.h>

int length(char* str){
    int i = 0;
    while(str[i]!='\0'){
        i++;
    }
    return i;
}

int main()
{
    printf("%d",length("hello"));
    return 0;
}



------------------------------------------------------------------------------------------------------------------------------



#4

#include <stdio.h>

void reverse(char* str){
    int i = 0;
    char *p = str, *q;
    char ch;
    while(str[i]!='\0'){
        i++;
    }
    q = str+i-1;
    
    while(p<q){
        ch = *p;
        *p = *q;
        *q = ch;
        p++;
        q--;
    }
}

int main()
{
    char str[100];
    printf("Input a string: ");
    scanf("%s",str);
    reverse(str);
    printf("Reverse of the string is: %s",str);
    return 0;
}



------------------------------------------------------------------------------------------------------------------------------



#5

#include <stdio.h>
#include <string.h>
int main()
{
char str[50];
int i=0, word=0, numChr[10];
int j = 0;
   printf("\nEnter a Sentence: ");
gets(str);
while (str[i] != '\0') // run till null found
{
if (str[i] == ' ') // check for num words
{
word++; // increase word count
j = 0; // reset char count
}
else
numChr[word] = ++j; // store frequency
i++; // increase string index
}
printf("\nTotal number of words: %d", word+1); // print message
printf("\nNumber of characters for each: "); // print num characters
for(i = 0; i <= word; i++){
   printf("%d ",numChr[i]);
   }
}


------------------------------------------------------------------------------------------------------------------------------


#6

Note: please make sure your complier has <conio.h> !!!


#include<stdio.h>
#include<conio.h>
#include<string.h>

int main()
{
   char userSentence[100];
   int i=0, lenSen, j;
   int c = 0,d=0;
   char updated[100];
  
   printf("Enter your sentence: ");
   gets(userSentence);
   lenSen=strlen(userSentence);
   for(i=0; i<lenSen; i++)
   {
   if(isspace(userSentence[i]))
   {
   for(j=i; j<lenSen;j++)
           {
               userSentence[j]=userSentence[j+1];
           }
       lenSen--;
   }
       if(userSentence[i]=='.')
       {
       userSentence[i] = ':';
       }
   }
  
   while (userSentence[c] != '\0')
{
if (!(isspace(userSentence[c]) && isspace(userSentence[c + 1]))) {
updated[d] = userSentence[c];
d++;
}
c++;
}

updated[d] = '\0';
  
   printf("Updated sentence = %s", updated);
   getch();

return 0;
}





------------------------------------------------------------------------------------------------------------------------------



#7


#include <stdio.h>
int main() {
char s1[100] = "computer ", s2[] = "programming";
int i, j;
printf("\nFirst string is :");
puts(s1);
printf("\nSecond string is :");
puts(s2);
for (i = 0; s1[i] != '\0'; ++i);
// concatenating each character of s2 to s1
for (j = 0; s2[j] != '\0'; ++j, ++i) {
s1[i] = s2[j];
}

s1[i] = '\0';
printf("After concatenation: ");
puts(s1);
return 0;
}




------------------------------------------------------------------------------------------------------------------------------



#8


#include<stdio.h>
#include<stdlib.h>

int fact(int* num, int* n)
{
    for ((*n) = 1; (*n) <= (*num); (*n)++)
    {
        *n = (*n)*(*num);
    }
}

int main()
{
    int num, n;
    printf("Write the number to take factorial \n");
    scanf("%d", &num);
    fact(&num, &n);
    printf("Factorial = %d", n);

    return 0;
}



------------------------------------------------------------------------------------------------------------------------------



#9


#include <stdio.h> 
  
// Store the greater element at 0th index 
void findGreaterSmaller(int a, int b, int arr[]) 
{ 
  
    // Store the greater element at 
    // 0th index of the array 
    if (a > b) { 
        arr[0] = a; 
        arr[1] = b; 
    } 
    else { 
        arr[0] = b; 
        arr[1] = a; 
    } 
} 
  
// Driver code 
int main() 
{ 
    int x, y; 
    int arr[2]; 
  
    printf("Enter two numbers: \n"); 
    scanf("%d%d", &x, &y); 
  
    findGreaterSmaller(x, y, arr); 
  
    printf("\nThe greater number is %d and the"
           "smaller number is %d", 
           arr[0], arr[1]); 
  
    return 0; 
} 






------------------------------------------------------------------------------------------------------------------------------



#10



#include <stdio.h>
#include <string.h>

void main()
{
  
int n;

printf("Enter the no of names: \n");
scanf("%d", &n);
char name[n][30], temp[30];
  
printf("Enter %d names:[in lowercase:] \n", n);
for (int i = 0; i < n; i++)
scanf("%s", name[i]);

for (int i=0;i<n-1;i++)
{
for (int j=i+1;j<n;j++)
{
if (strcmp(name[i], name[j]) > 0)
{
strcpy(temp, name[i]);
strcpy(name[i], name[j]);
strcpy(name[j], temp);
}
}
}
printf("Alphabetical order:\n");
for (int i = 0; i < n; i++)
printf("%s\n",name[i]);
}
